@function is_empty( $value ) {
  @return if( type_of( $value ) == 'string' and str-length( $value ) == 0, false, $value );
}

@mixin add( $key, $value, $default: false ) {
  @if type_of( $value ) == 'list' {
    $out: (); $test: true;
    @each $var in $value {
      @if not is_empty( $var ) { $test: false; }
      $out: join( $out, $var, space );
    }
    @if $test {
      #{$key}: #{$out};
    } @else if $default {
      #{$key}: #{$default};
    }
  } @else {
    @if $value {
      #{$key}: #{$value};
    } @else if $default {
      #{$key}: #{$default};
    }
  }
}

@function get( $object, $a: null, $b: null ) {
  @if $a == null {
    @return is_empty( $object );
  }
  @if type_of( $object ) == 'list' {
    @if type_of( $a ) == 'number' and $a > 0 {
      @if $a <= length( $object ) {
        @return is_empty( nth( $object, $a ));
      }
    }
    @return false;
  } @else if type_of( $object ) == 'map' {
    @if type_of( $a ) == 'string' {
      @if map_has_key( $object, $a ) {
        $val: map-get( $object, $a );
        @if type_of( $val ) == 'list' and type_of( $b ) == 'number' {
          @return get( $val, $b );
        } @else {
          @return is_empty( $val );
        }
      } @else {
        @return false;
      }
    }
  }
  @return is_empty( $object );
}